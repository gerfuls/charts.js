{"google":"","body":"# Charts.js 0.2\r\n\r\nA jQuery plugin to make using Google Charts super simple, without losing customizability.\r\n\r\n## Basic Setup\r\n\r\nInclude the appropriate libraries in your `<head>` tag\r\n  \r\n```html\r\n<!-- jQuery -->\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\r\n    \r\n<!-- Google JS-API -->\r\n<script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\r\n    \r\n<!-- Charts.js -->\r\n<script type=\"text/javascript\" src=\"js/charts.js\"></script>\r\n```\r\n\r\nLoad the Google Charts Library\r\n\r\n```html\r\n<script type=\"text/javascript\">\r\n// Load the visualization library\r\ngoogle.load('visualization', '1.0', {'packages':['corechart']});\r\n</script>\r\n```\r\n\r\nOn the Google Charts callback, draw your charts using Charts.js\r\n\r\n```html\r\n<script type=\"text/javascript\">\r\ngoogle.setOnLoadCallback(makeCharts);\r\nfunction makeCharts() {\r\n  $(\"#chart-bar\").chart({\r\n    chartType:'bar',\r\n    columnTitles:['Answer', 'Frequency'],\r\n    jsonData: [[\"1\",1],\r\n              [\"2\",4],\r\n              [\"3\",1],\r\n              [\"4\",3]]\r\n  });\r\n}\r\n</script>\r\n```\r\n\r\n## Specifying Data\r\n\r\nYou may either pass json directly upon creating the chart, or give the chart a url to make an AJAX request for the data. Currently, all data injected into the chart using the `google.visualization.arrayToDataTable()` method which you can read about [here](https://google-developers.appspot.com/chart/interactive/docs/datatables_dataviews#arraytodatatable).\r\n\r\n### Passing JSON\r\n\r\nJSON needs to be in a format where each row represents a data point, and each column represents a series. Column titles may be included in either the JSON or the `columnTitles` attribute. Column data types are implicit.\r\n\r\n```javascript\r\n$('#chart').chart({\r\n  chartType:'bar',\r\n  columnTitles:['Answer', 'Frequency'],\r\n  jsonData: [\r\n              [\"1\",1],\r\n              [\"2\",4],\r\n              [\"3\",1],\r\n              [\"4\",3]\r\n            ]\r\n});\r\n```\r\n\r\n### Passing a URL\r\n\r\nMake sure the JSON returned by the server matches the format above.\r\n\r\n```javascript\r\n$('#chart').chart({\r\n  chartType:'bar',\r\n  columnTitles:['Answer', 'Frequency'],\r\n  url: 'demo.json'\r\n});\r\n```\r\n\r\nIf you have used a URL for data, you can ask the chart to refresh its data by calling `update`.\r\n\r\n```javascript\r\n$('#chart').chart('update');\r\n```\r\n\r\n## Customizing\r\n\r\nGoogle Charts allows for tons of customization, you and Charts.js supports all of these customization options. \r\n\r\n### Chart Types\r\n\r\nCharts.js supports `'bar'`, `'column'`, `'line'`, `'pie'`, `'combo'`, `'area'`, `'bubble'`, `'candlestick'`, and `'scatter'` graphs. Simply specify the type of graph you want on creation. You can also change it later and redraw the chart to see the changes.\r\n\r\n```javascript\r\n// specify at creation\r\n$('#chart').chart({\r\n  chartType:'bar',\r\n  columnTitles:['Answer', 'Frequency'],\r\n  url: 'demo.json'\r\n});\r\n\r\n// or change it later\r\n$('#chart').data('chart').chartType = 'bar';\r\n\r\n// but don't forget to redraw the chart\r\n$('#chart').chart('draw');\r\n```\r\n\r\n### Google Charts Options\r\n\r\nYou may specify any options from the [Google Charts API](https://google-developers.appspot.com/chart/interactive/docs/customizing_charts) by passing them to the `options` item.\r\n\r\n```javascript\r\n$('#chart').chart({\r\n  chartType:'bar',\r\n  url: 'demo.json',\r\n  options: {\r\n    height: 600,\r\n    width: 1200\r\n  }\r\n});\r\n```\r\n\r\nOptions can also be changed after creation by updating the `options` object and redrawing the chart\r\n\r\n```javascript\r\n$('#chart').data('chart').options.height = 1000;\r\n$('#chart').chart('draw');\r\n```","tagline":"A jQuery plugin to make using Google Charts super simple, without losing any customizability.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Charts.js"}